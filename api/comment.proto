syntax = "proto3";

package ozon.dev.homework1.api;
option go_package = "gitlab.ozon.dev/Hostile359/homework-1/pkg/api;api";

import "google/api/annotations.proto";


service Comment {
  // Add comment
  rpc CommentAdd(CommentAddRequest) returns (CommentAddResponse) {
    option (google.api.http) = {
      post: "/v1/comment"
      body: "*"
    };
  }

  // Get comment
  rpc CommentGet(CommentGetRequest) returns (CommentGetResponse) {
    option (google.api.http) = {
      get: "/v1/comment/{id}"
    };
  }

  // Get Comments list
  rpc CommentList(CommentListRequest) returns (CommentListResponse) {
    option (google.api.http) = {
      get: "/v1/comments"
    };
  }

  // Update Comment
  rpc CommentUpdate(CommentUpdateRequest) returns (CommentUpdateResponse) {
    option (google.api.http) = {
      put: "/v1/comment"
      body: "*"
    };
  }
  
  // Delete Comment
  rpc CommentDelete(CommentDeleteRequest) returns (CommentDeleteResponse) {
    option (google.api.http) = {
      delete: "/v1/comment"
      body: "*"
    };
  }
}

// ---------------------------------------------------------------------------------------------------------------------
// CommentAdd endpoint messages
// ---------------------------------------------------------------------------------------------------------------------

message CommentAddRequest {
  string comment = 2;
  uint64 user_id = 3;
}
message CommentAddResponse {}

// ---------------------------------------------------------------------------------------------------------------------
// CommentGet endpoint messages
// ---------------------------------------------------------------------------------------------------------------------

message CommentGetRequest {
  uint64 id       = 1;
}
message CommentGetResponse {
  Comment comment = 1;

  message Comment {
    uint64 id       = 1;
    string comment  = 2;
    uint64 user_id  = 3;
  }
}

// ---------------------------------------------------------------------------------------------------------------------
// CommentList endpoint messages
// ---------------------------------------------------------------------------------------------------------------------

message CommentListRequest {
  uint64 page     = 1;
  uint64 per_page = 2;
}
message CommentListResponse {
  repeated Comment Comments = 1;

  message Comment {
    uint64 id       = 1;
    string comment  = 2;
    uint64 user_id  = 3;
  }
}

// ---------------------------------------------------------------------------------------------------------------------
// CommentUpdate endpoint messages
// ---------------------------------------------------------------------------------------------------------------------

message CommentUpdateRequest {
    uint64 id       = 1;
    string comment  = 2;
    uint64 user_id  = 3;
}
message CommentUpdateResponse {}

// ---------------------------------------------------------------------------------------------------------------------
// CommentDelete endpoint messages
// ---------------------------------------------------------------------------------------------------------------------

message CommentDeleteRequest {
  uint64 id       = 1;
}
message CommentDeleteResponse {}
